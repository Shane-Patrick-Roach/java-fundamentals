/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import inheritance.restaurant.Restaurant;
import inheritance.restaurant.Review;
import org.junit.jupiter.api.Test;

import static inheritance.Library.restaurantList;
import static inheritance.enums.numberOfStars.*;
import static inheritance.enums.priceCategory.$$;


class LibraryTest {

    @Test
    void newMakeRestaurant() {
        Library sut = new Library();
        Restaurant toniesPizza = new Restaurant("Tony's Pizza", $$, "Private");
        Library.addRestaurant(toniesPizza);
        assert(sut.restaurantList.size()>0);
    }

    @Test
    void newMakeRestaurantToString() {
        Library sut = new Library();
        Restaurant toniesPizza = new Restaurant("Tony's Pizza", $$, "Private");
        System.out.println(toniesPizza);
        assert(toniesPizza.toString().equals("Restaurant: Tony's Pizza has a ZERO star rating and a price category of $$.\n" +
                "Number of Reviews: 0"));
    }

    @Test
    void newMakeReviewToStringAndAssociateWithRestaurant() {
        Library sut = new Library();
        Restaurant toniesPizza = new Restaurant("Tony's Pizza", $$, "Private");
        Review bobReview = new Review("This was really bad.", "Bob", FOUR, toniesPizza);
        System.out.println(bobReview);
        assert(bobReview.toString().equals("Tony's Pizza $$\n" +
                "Review by Bob.\n" +
                "This was really bad.\n" +
                "Number of Reviews: FOUR"));
    }


    @Test
    void makeReviewAboutRestaurant() {
        Library sut = new Library();
        Restaurant toniesPizza = new Restaurant("Tony's Pizza", $$, "Private");
        Review bobReview = new Review("This was really bad.", "Bob", FOUR, toniesPizza);
        toniesPizza.addReview(bobReview);
        assert(toniesPizza.reviewsList.size()>0);
    }


    @Test
    void newRestaurantReviewList() {
    Library sut = new Library();
        Restaurant toniesPizza = new Restaurant("Tony's Pizza", $$, "Private");
        Review bobReview = new Review("This was really bad.", "Bob", FOUR, toniesPizza);
        Review sallyReview = new Review("This was really good.", "Sally", TWO, toniesPizza);
        Review jimReview = new Review("Could have been better.", "Jim", THREE, toniesPizza);
        toniesPizza.addReview(bobReview);
        toniesPizza.addReview(sallyReview);
        toniesPizza.addReview(sallyReview);
        assert(toniesPizza.reviewsList.size() == 2);
    }
}
