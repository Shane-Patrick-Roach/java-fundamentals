/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;

public class Library {
    public ArrayList<Integer> roll(int n){
        ArrayList<Integer> myRolls = new ArrayList<>();
        int max = 6;
        int min = 1;
        Random rand = new Random();

        for (int i = 0; i < n; i++) {
            int randomNum = rand.nextInt((max - min) + 1) + min;
            myRolls.add(randomNum);
        }
        //System.out.println(myRolls);
        return myRolls;
    }

    public boolean containsDuplicates(int[] array){
        int counter = 0;
        boolean containsDuplicates;

        for (int i = 0; i < array.length; i++){
            for (int j = i+1; j < array.length; j++) {
                if (j!=i && array[i] == array[j]) {
                    counter++;
                }
            }
        }

        if (counter>0){
            containsDuplicates = true;
        } else {
            containsDuplicates = false;
        }

        System.out.println(containsDuplicates);
        return containsDuplicates;
    }

    public int averageOfArray(int[] array){
        int bucket = 0;
        for (int i = 0; i < array.length; i++){
            bucket = bucket + array[i];
        }
        int average = bucket/array.length;

        return average;
    }

    public String highestAverageArray(int[][] array){

        ArrayList<Integer> bucketArray = new ArrayList<>();

        for (int i = 0; i < array.length; i++){
            int bucket = 0;
            int lengthArray = array[i].length;
            for (int innerArray = 0; innerArray < array[i].length; innerArray++){
                bucket = bucket + array[i][innerArray];

            }
            bucketArray.add(bucket/lengthArray);
        }
        int maxValue = Collections.min(bucketArray);
        int indexOfMax = bucketArray.indexOf(maxValue);

        return Arrays.toString(array[indexOfMax]);
    }
}
